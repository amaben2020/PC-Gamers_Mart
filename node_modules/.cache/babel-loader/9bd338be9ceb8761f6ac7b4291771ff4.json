{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\ProductEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Loading from \"./../../messages/Loading\";\nimport FormContainer from \"./FormContainer/FormContainer.js\";\nimport { updateUser } from \"./../../actions/userActions\";\nimport { getUserDetails, getUserForAdmin } from \"./../../actions/userActions\";\nimport { Row } from \"react-bootstrap\";\nimport { USER_UPDATE_RESET } from \"../../constants/userConstants.js\";\nimport { productDetailsAction } from \"./../../actions/productListActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../../constants/constants\";\nimport { productUpdateAction } from \"./../../actions/productListActions\";\nimport axios from \"axios\"; //yOU SIMPLY GET THE PRODUCT YOU WANNA EDIT\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  location,\n  history,\n  match\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [category, setCategory] = useState(\"\"); //creating the image loading state\n\n  const [uploadingLoading, setUploadingLoading] = useState(false);\n  const dispatch = useDispatch();\n  const userId = match.params.id;\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success\n  } = productUpdate;\n  const adminProfileList = useSelector(state => state.adminProfileList);\n  const {\n    loading: loadingAdminProfileEdit,\n    error: errorAdminProfileEdit,\n    user: userAdminProfileEdit\n  } = adminProfileList;\n  useEffect(() => {\n    //if successfully updated, clear the fields and push\n    if (success) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push(\"/admin/productlist\");\n    } else {\n      // simply render the list of products if there are none\n      if (!product.name || product._id !== productId) {\n        dispatch(productDetailsAction(productId));\n      } else {\n        setName(product.name);\n        setBrand(product.brand);\n        setDescription(product.description);\n        setImage(product.image);\n        setPrice(product.price);\n        setCountInStock(product.countInStock);\n        setCategory(product.category);\n      }\n    }\n  }, [dispatch, success, history, product._id, product.name, product.brand, product.description, product.image, product.price, product.countInStock, product.category, productId]); //The submit handler simply sends the form value to the backend/DB\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(productUpdateAction({\n      _id: productId,\n      name,\n      category,\n      brand,\n      countInStock,\n      description,\n      price,\n      image\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: [\" \", \"Go Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), success && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [\"Product successfully updated\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }, this), loadingAdminProfileEdit ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this) : errorAdminProfileEdit ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: [\" \", errorAdminProfileEdit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mr-3\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              placeholder: \"Enter image url \",\n              type: \"text\",\n              value: image,\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"image-file\",\n          label: \"Choose File\",\n          custom: true,\n          onChange: uploadFileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mr-3\",\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"brand\",\n              value: brand,\n              onChange: e => setBrand(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter count In Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"OdxnQcA1tH6PQVx8L3quDlNPnvw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/ProductEditScreen.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","ErrorMessage","Link","Form","Button","Loading","FormContainer","updateUser","getUserDetails","getUserForAdmin","Row","USER_UPDATE_RESET","productDetailsAction","PRODUCT_UPDATE_RESET","productUpdateAction","axios","ProductEditScreen","location","history","match","productId","params","id","description","setDescription","image","setImage","price","setPrice","name","setName","brand","setBrand","countInStock","setCountInStock","category","setCategory","uploadingLoading","setUploadingLoading","dispatch","userId","productDetails","state","product","productUpdate","loading","loadingUpdate","error","errorUpdate","success","adminProfileList","loadingAdminProfileEdit","errorAdminProfileEdit","user","userAdminProfileEdit","type","push","_id","submitHandler","e","preventDefault","target","value","uploadFileHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loading from \"./../../messages/Loading\";\r\nimport FormContainer from \"./FormContainer/FormContainer.js\";\r\nimport { updateUser } from \"./../../actions/userActions\";\r\nimport { getUserDetails, getUserForAdmin } from \"./../../actions/userActions\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { USER_UPDATE_RESET } from \"../../constants/userConstants.js\";\r\nimport { productDetailsAction } from \"./../../actions/productListActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../../constants/constants\";\r\nimport { productUpdateAction } from \"./../../actions/productListActions\";\r\nimport axios from \"axios\";\r\n\r\n//yOU SIMPLY GET THE PRODUCT YOU WANNA EDIT\r\nconst ProductEditScreen = ({ location, history, match }) => {\r\n\tconst productId = match.params.id;\r\n\tconst [description, setDescription] = useState(\"\");\r\n\tconst [image, setImage] = useState(\"\");\r\n\tconst [price, setPrice] = useState(0);\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [brand, setBrand] = useState(\"\");\r\n\tconst [countInStock, setCountInStock] = useState(0);\r\n\tconst [category, setCategory] = useState(\"\");\r\n\r\n\t//creating the image loading state\r\n\tconst [uploadingLoading, setUploadingLoading] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userId = match.params.id;\r\n\r\n\tconst productDetails = useSelector((state) => state.productDetails);\r\n\tconst { product } = productDetails;\r\n\r\n\tconst productUpdate = useSelector((state) => state.productUpdate);\r\n\tconst { loading: loadingUpdate, error: errorUpdate, success } = productUpdate;\r\n\r\n\tconst adminProfileList = useSelector((state) => state.adminProfileList);\r\n\tconst {\r\n\t\tloading: loadingAdminProfileEdit,\r\n\t\terror: errorAdminProfileEdit,\r\n\t\tuser: userAdminProfileEdit,\r\n\t} = adminProfileList;\r\n\r\n\tuseEffect(() => {\r\n\t\t//if successfully updated, clear the fields and push\r\n\t\tif (success) {\r\n\t\t\tdispatch({ type: PRODUCT_UPDATE_RESET });\r\n\t\t\thistory.push(\"/admin/productlist\");\r\n\t\t} else {\r\n\t\t\t// simply render the list of products if there are none\r\n\t\t\tif (!product.name || product._id !== productId) {\r\n\t\t\t\tdispatch(productDetailsAction(productId));\r\n\t\t\t} else {\r\n\t\t\t\tsetName(product.name);\r\n\t\t\t\tsetBrand(product.brand);\r\n\t\t\t\tsetDescription(product.description);\r\n\t\t\t\tsetImage(product.image);\r\n\t\t\t\tsetPrice(product.price);\r\n\t\t\t\tsetCountInStock(product.countInStock);\r\n\t\t\t\tsetCategory(product.category);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tdispatch,\r\n\t\tsuccess,\r\n\t\thistory,\r\n\t\tproduct._id,\r\n\t\tproduct.name,\r\n\t\tproduct.brand,\r\n\t\tproduct.description,\r\n\t\tproduct.image,\r\n\t\tproduct.price,\r\n\t\tproduct.countInStock,\r\n\t\tproduct.category,\r\n\t\tproductId,\r\n\t]);\r\n\t//The submit handler simply sends the form value to the backend/DB\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tproductUpdateAction({\r\n\t\t\t\t_id: productId,\r\n\t\t\t\tname,\r\n\t\t\t\tcategory,\r\n\t\t\t\tbrand,\r\n\t\t\t\tcountInStock,\r\n\t\t\t\tdescription,\r\n\t\t\t\tprice,\r\n\t\t\t\timage,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n\t\t\t\t{\" \"}\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<h1> Edit Product</h1>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<ErrorMessage>\r\n\t\t\t\t\t\tProduct successfully updated\r\n\t\t\t\t\t\t<i className=\"fas fa-check\"></i>\r\n\t\t\t\t\t</ErrorMessage>\r\n\t\t\t\t)}\r\n\t\t\t\t{loadingUpdate && <Loading />}\r\n\t\t\t\t{errorUpdate && (\r\n\t\t\t\t\t<ErrorMessage variant=\"danger\">{errorUpdate}</ErrorMessage>\r\n\t\t\t\t)}\r\n\t\t\t\t{loadingAdminProfileEdit ? (\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t) : errorAdminProfileEdit ? (\r\n\t\t\t\t\t<ErrorMessage variant=\"danger\"> {errorAdminProfileEdit}</ErrorMessage>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId=\"price\">\r\n\t\t\t\t\t\t\t<Form.Label>Price</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter price\"\r\n\t\t\t\t\t\t\t\tvalue={price}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPrice(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"image\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"mr-3\">Image</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter image url \"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tvalue={image}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setImage(e.target.value)}\r\n\t\t\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.File\r\n\t\t\t\t\t\t\tid=\"image-file\"\r\n\t\t\t\t\t\t\tlabel=\"Choose File\"\r\n\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\tonChange={uploadFileHandler}\r\n\t\t\t\t\t\t></Form.File>\r\n\t\t\t\t\t\t<Form.Group controlId=\"brand\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"mr-3\">Brand</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\ttype=\"brand\"\r\n\t\t\t\t\t\t\t\t\tvalue={brand}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setBrand(e.target.value)}\r\n\t\t\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId=\"description\">\r\n\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\r\n\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId=\"category\">\r\n\t\t\t\t\t\t\t<Form.Label>Category</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter category\"\r\n\t\t\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setCategory(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"countInStock\">\r\n\t\t\t\t\t\t\t<Form.Label>Count In Stock</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter count In Stock\"\r\n\t\t\t\t\t\t\t\tvalue={countInStock}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setCountInStock(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\tUPDATE\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}