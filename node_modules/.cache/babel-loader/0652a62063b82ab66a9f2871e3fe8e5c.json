{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\CartScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Form, Button, Card } from \"react-bootstrap\";\nimport { addToCart } from \"./../../actions/cartActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  //set the product id variable to the selected product's id\n  const productId = match.params.id; // qty should be localhost://api/products/sans89as9s838?qty=3; 3 would be selected\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log(cartItems);\n  useEffect(() => {\n    //we only wanna addToCart if there is a productId\n    if (productId) {\n      dispatch(addToCart(qty, productId));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Please go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/CartScreen.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","ErrorMessage","Link","Row","Col","ListGroup","Form","Button","Card","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","console","log","length","map","item","image","name","product"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,iBAAxD;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AACpD;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B,CAFoD,CAGpD;;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,IAAI,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAIiB,SAAJ,EAAe;AACdO,MAAAA,QAAQ,CAACZ,SAAS,CAACQ,GAAD,EAAMH,SAAN,CAAV,CAAR;AACA;AACD,GALQ,EAKN,CAACO,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CALM,CAAT;AAOA,sBACC,QAAC,GAAD;AAAA,2BACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEO,SAAS,CAACG,MAAV,KAAqB,CAArB,gBACA,QAAC,YAAD;AAAA,uDACoB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAKA,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBACEH,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACd,QAAC,SAAD,CAAW,IAAX;AAAA,iCACC,QAAC,GAAD;AAAA,mCACC,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACC,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAEA,IAAI,CAACC,KAAjB;AAAwB,gBAAA,GAAG,EAAED,IAAI,CAACE,IAAlC;AAAwC,gBAAA,KAAK,MAA7C;AAA8C,gBAAA,OAAO;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,WAAqBF,IAAI,CAACG,OAA1B;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAwBA,CAzCD;;GAAMtB,U;UAMYX,W,EACJC,W;;;KAPRU,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Form, Button, Card } from \"react-bootstrap\";\r\nimport { addToCart } from \"./../../actions/cartActions.js\";\r\nconst CartScreen = ({ match, location, history }) => {\r\n\t//set the product id variable to the selected product's id\r\n\tconst productId = match.params.id;\r\n\t// qty should be localhost://api/products/sans89as9s838?qty=3; 3 would be selected\r\n\tconst qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst cart = useSelector((state) => state.cart);\r\n\tconst { cartItems } = cart;\r\n\tconsole.log(cartItems);\r\n\tuseEffect(() => {\r\n\t\t//we only wanna addToCart if there is a productId\r\n\t\tif (productId) {\r\n\t\t\tdispatch(addToCart(qty, productId));\r\n\t\t}\r\n\t}, [dispatch, productId, qty]);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={8}>\r\n\t\t\t\t<h1>Shopping Cart</h1>\r\n\t\t\t\t{cartItems.length === 0 ? (\r\n\t\t\t\t\t<ErrorMessage>\r\n\t\t\t\t\t\tYour cart is empty <Link to=\"/\">Please go back</Link>\r\n\t\t\t\t\t</ErrorMessage>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t{cartItems.map((item) => (\r\n\t\t\t\t\t\t\t<ListGroup.Item key={item.product}>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Image src={item.image} alt={item.name} fluid rounded />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}