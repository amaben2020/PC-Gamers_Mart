{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\PaymentScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"./../../actions/cartActions\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport FormContainer from \"./FormContainer/FormContainer.js\";\nimport CheckoutSteps from \"./CheckoutSteps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAdd\n  } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\"); //if there's no shipping addres\n\n  if (!shippingAdd) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Paypal or CreditCard\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            value: \"Paypal\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PaymentScreen, \"8VXqaSXgi/vzfP65teHXcNpfO7A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/PaymentScreen.jsx"],"names":["React","useState","useDispatch","useSelector","savePaymentMethod","Form","Button","Col","FormContainer","CheckoutSteps","PaymentScreen","history","cart","state","shippingAdd","dispatch","paymentMethod","setPaymentMethod","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAMC,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBF,IAAxB;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,QAAD,CAAlD,CALsC,CAOtC;;AACA,MAAI,CAACa,WAAL,EAAkB;AACjBH,IAAAA,OAAO,CAACO,IAAR,CAAa,WAAb;AACA;;AAED,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,QAAQ,CAACX,iBAAiB,CAACY,aAAD,CAAlB,CAAR;AACAL,IAAAA,OAAO,CAACO,IAAR,CAAa,aAAb;AACA,GAJD;;AAMA,sBACC,QAAC,aAAD;AAAA,4BAEC,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAMC,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACC,QAAC,IAAD,CAAM,KAAN;AAAA,gCACC,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,GAAD;AAAA,iCACC,QAAC,IAAD,CAAM,KAAN;AACC,YAAA,IAAI,EAAC,OADN;AAEC,YAAA,KAAK,EAAC,sBAFP;AAGC,YAAA,EAAE,EAAC,QAHJ;AAIC,YAAA,IAAI,EAAC,eAJN;AAKC,YAAA,KAAK,EAAC,QALP;AAMC,YAAA,OAAO,MANR;AAOC,YAAA,QAAQ,EAAGC,CAAD,IAAOH,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV;AAPlC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAeC,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CA9CD;;GAAMb,a;UACQP,W,EAEID,W;;;KAHZQ,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"./../../actions/cartActions\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"./FormContainer/FormContainer.js\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\tconst cart = useSelector((state) => state.cart);\r\n\tconst { shippingAdd } = cart;\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\r\n\r\n\t//if there's no shipping addres\r\n\tif (!shippingAdd) {\r\n\t\thistory.push(\"/shipping\");\r\n\t}\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(savePaymentMethod(paymentMethod));\r\n\t\thistory.push(\"/placeorder\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t{/**The steps simply mean highlighted steps that have been fulfilled */}\r\n\t\t\t<CheckoutSteps step1 step2 step3 />\r\n\r\n\t\t\t<h1>Payment Method</h1>\r\n\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label as=\"legend\">Select Method</Form.Label>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tlabel=\"Paypal or CreditCard\"\r\n\t\t\t\t\t\t\tid=\"paypal\"\r\n\t\t\t\t\t\t\tname=\"paymentMethod\"\r\n\t\t\t\t\t\t\tvalue=\"Paypal\"\r\n\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\tonChange={(e) => setPaymentMethod(e.target.value)}\r\n\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t);\r\n};\r\n\r\nexport default PaymentScreen;\r\n"]},"metadata":{},"sourceType":"module"}