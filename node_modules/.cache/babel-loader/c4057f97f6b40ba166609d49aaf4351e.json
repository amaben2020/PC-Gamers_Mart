{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\CartScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Form, Button, Card } from \"react-bootstrap\";\nimport { addToCart } from \"./../../actions/cartActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  //set the product id variable to the selected product's id\n  const productId = match.params.id; // qty should be localhost://api/products/sans89as9s838?qty=3; 3 would be selected\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    //we only wanna addToCart if there is a productId\n    if (productId) {\n      dispatch(addToCart(qty, productId));\n    }\n  }, [productId, qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/CartScreen.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","ErrorMessage","Link","Row","Col","ListGroup","Form","Button","Card","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,iBAAxD;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AACpD;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B,CAFoD,CAGpD;;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,IAAI,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAIiB,SAAJ,EAAe;AACdO,MAAAA,QAAQ,CAACZ,SAAS,CAACQ,GAAD,EAAMH,SAAN,CAAV,CAAR;AACA;AACD,GALQ,EAKN,CAACA,SAAD,EAAYG,GAAZ,EAAiBI,QAAjB,CALM,CAAT;AAOA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAjBD;;GAAMX,U;UAMYX,W,EACJC,W;;;KAPRU,U;AAmBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Form, Button, Card } from \"react-bootstrap\";\r\nimport { addToCart } from \"./../../actions/cartActions.js\";\r\nconst CartScreen = ({ match, location, history }) => {\r\n\t//set the product id variable to the selected product's id\r\n\tconst productId = match.params.id;\r\n\t// qty should be localhost://api/products/sans89as9s838?qty=3; 3 would be selected\r\n\tconst qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst cart = useSelector((state) => state.cart);\r\n\tconst { cartItems } = cart;\r\n\tuseEffect(() => {\r\n\t\t//we only wanna addToCart if there is a productId\r\n\t\tif (productId) {\r\n\t\t\tdispatch(addToCart(qty, productId));\r\n\t\t}\r\n\t}, [productId, qty, dispatch]);\r\n\r\n\treturn <div>cart</div>;\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}