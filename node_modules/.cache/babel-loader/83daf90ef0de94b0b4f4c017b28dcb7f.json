{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productUpdateReducer,productReviewCreateReducer,topRatedProductReducer}from\"./actions/productReducers\";import{cartReducers}from\"./actions/cartReducers\";import{userLoginReducer,userDetailsReducer,userRegisterReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer,adminProfileListReducer}from\"./actions/userReducers\";import{orderReducers,orderDetailsReducers,orderPayReducer,orderListReducer,orderListMyReducer,orderDeliverReducer}from\"./actions/orderReducers\";var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,productDelete:productDeleteReducer,productCreate:productCreateReducer,productUpdate:productUpdateReducer,productReviewCreate:productReviewCreateReducer,topTatedProduct:topRatedProductReducer,cart:cartReducers,userLogin:userLoginReducer,userDetails:userDetailsReducer,userRegister:userRegisterReducer,userList:userListReducer,userDelete:userDeleteReducer,userUpdateProfile:userUpdateProfileReducer,userUpdate:userUpdateReducer,orderCreator:orderReducers,orderDetails:orderDetailsReducers,orderPay:orderPayReducer,orderListMy:orderListMyReducer,orderList:orderListReducer,orderDeliver:orderDeliverReducer,adminProfileList:adminProfileListReducer});//storing backend products/:id property in cartItems state\nvar cartItemsFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\"))//removed JSON.parse\n:[];// if we have a userInfo in storage, then convert to an object for us to use\nvar userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null;var shippingAddressFromStorage=localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{};var paymentMethodFromStorage=localStorage.getItem(\"paymentMethod\")?JSON.parse(localStorage.getItem(\"paymentMethod\")):\"\";//Putting the cartItems in a global state\nvar initialState={cart:{cartItems:cartItemsFromStorage,shippingAdd:shippingAddressFromStorage,paymentMethod:paymentMethodFromStorage},userLogin:{userInfo:userInfoFromStorage}};//console.log(initialState.cart.paymentMethod);\nvar middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","topRatedProductReducer","cartReducers","userLoginReducer","userDetailsReducer","userRegisterReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","adminProfileListReducer","orderReducers","orderDetailsReducers","orderPayReducer","orderListReducer","orderListMyReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","topTatedProduct","cart","userLogin","userDetails","userRegister","userList","userDelete","userUpdateProfile","userUpdate","orderCreator","orderDetails","orderPay","orderListMy","orderList","orderDeliver","adminProfileList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cartItems","shippingAdd","paymentMethod","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OACCC,kBADD,CAECC,qBAFD,CAGCC,oBAHD,CAICC,oBAJD,CAKCC,oBALD,CAMCC,0BAND,CAOCC,sBAPD,KAQO,2BARP,CASA,OAASC,YAAT,KAA6B,wBAA7B,CACA,OACCC,gBADD,CAECC,kBAFD,CAGCC,mBAHD,CAICC,wBAJD,CAKCC,eALD,CAMCC,iBAND,CAOCC,iBAPD,CAQCC,uBARD,KASO,wBATP,CAUA,OACCC,aADD,CAECC,oBAFD,CAGCC,eAHD,CAICC,gBAJD,CAKCC,kBALD,CAMCC,mBAND,KAOO,yBAPP,CAQA,GAAMC,CAAAA,OAAO,CAAG1B,eAAe,CAAC,CAC/B2B,WAAW,CAAEvB,kBADkB,CAE/BwB,cAAc,CAAEvB,qBAFe,CAG/BwB,aAAa,CAAEvB,oBAHgB,CAI/BwB,aAAa,CAAEvB,oBAJgB,CAK/BwB,aAAa,CAAEvB,oBALgB,CAM/BwB,mBAAmB,CAAEvB,0BANU,CAO/BwB,eAAe,CAAEvB,sBAPc,CAQ/BwB,IAAI,CAAEvB,YARyB,CAS/BwB,SAAS,CAAEvB,gBAToB,CAU/BwB,WAAW,CAAEvB,kBAVkB,CAW/BwB,YAAY,CAAEvB,mBAXiB,CAY/BwB,QAAQ,CAAEtB,eAZqB,CAa/BuB,UAAU,CAAEtB,iBAbmB,CAc/BuB,iBAAiB,CAAEzB,wBAdY,CAe/B0B,UAAU,CAAEvB,iBAfmB,CAgB/BwB,YAAY,CAAEtB,aAhBiB,CAiB/BuB,YAAY,CAAEtB,oBAjBiB,CAkB/BuB,QAAQ,CAAEtB,eAlBqB,CAmB/BuB,WAAW,CAAErB,kBAnBkB,CAoB/BsB,SAAS,CAAEvB,gBApBoB,CAqB/BwB,YAAY,CAAEtB,mBArBiB,CAsB/BuB,gBAAgB,CAAE7B,uBAtBa,CAAD,CAA/B,CAyBA;AACA,GAAM8B,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAA8C;AADpB,CAE1B,EAFH,CAIA;AACA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,CAEzB,IAFH,CAIA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADgC,CAEhC,EAFH,CAIA,GAAMK,CAAAA,wBAAwB,CAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,EAC9BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAD8B,CAE9B,EAFH,CAIA;AACA,GAAMM,CAAAA,YAAY,CAAG,CACpBvB,IAAI,CAAE,CACLwB,SAAS,CAAET,oBADN,CAELU,WAAW,CAAEJ,0BAFR,CAGLK,aAAa,CAAEJ,wBAHV,CADc,CAMpBrB,SAAS,CAAE,CAAE0B,QAAQ,CAAEP,mBAAZ,CANS,CAArB,CAQA;AAEA,GAAMQ,CAAAA,UAAU,CAAG,CAAC5D,KAAD,CAAnB,CACA,GAAM6D,CAAAA,KAAK,CAAGhE,WAAW,CACxB2B,OADwB,CAExB+B,YAFwB,CAGxBtD,mBAAmB,CAACF,eAAe,MAAf,QAAmB6D,UAAnB,CAAD,CAHK,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n\tproductDeleteReducer,\r\n\tproductCreateReducer,\r\n\tproductUpdateReducer,\r\n\tproductReviewCreateReducer,\r\n\ttopRatedProductReducer,\r\n} from \"./actions/productReducers\";\r\nimport { cartReducers } from \"./actions/cartReducers\";\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserDetailsReducer,\r\n\tuserRegisterReducer,\r\n\tuserUpdateProfileReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n\tadminProfileListReducer,\r\n} from \"./actions/userReducers\";\r\nimport {\r\n\torderReducers,\r\n\torderDetailsReducers,\r\n\torderPayReducer,\r\n\torderListReducer,\r\n\torderListMyReducer,\r\n\torderDeliverReducer,\r\n} from \"./actions/orderReducers\";\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tproductDelete: productDeleteReducer,\r\n\tproductCreate: productCreateReducer,\r\n\tproductUpdate: productUpdateReducer,\r\n\tproductReviewCreate: productReviewCreateReducer,\r\n\ttopTatedProduct: topRatedProductReducer,\r\n\tcart: cartReducers,\r\n\tuserLogin: userLoginReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserList: userListReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\tuserUpdateProfile: userUpdateProfileReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\torderCreator: orderReducers,\r\n\torderDetails: orderDetailsReducers,\r\n\torderPay: orderPayReducer,\r\n\torderListMy: orderListMyReducer,\r\n\torderList: orderListReducer,\r\n\torderDeliver: orderDeliverReducer,\r\n\tadminProfileList: adminProfileListReducer,\r\n});\r\n\r\n//storing backend products/:id property in cartItems state\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n\t? JSON.parse(localStorage.getItem(\"cartItems\")) //removed JSON.parse\r\n\t: [];\r\n\r\n// if we have a userInfo in storage, then convert to an object for us to use\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n\t? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n\t: null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n\t? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n\t: {};\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\r\n\t? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n\t: \"\";\r\n\r\n//Putting the cartItems in a global state\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: cartItemsFromStorage,\r\n\t\tshippingAdd: shippingAddressFromStorage,\r\n\t\tpaymentMethod: paymentMethodFromStorage,\r\n\t},\r\n\tuserLogin: { userInfo: userInfoFromStorage },\r\n};\r\n//console.log(initialState.cart.paymentMethod);\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}