{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./actions/productReducers\";\nimport { cartReducers } from \"./actions/cartReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducers\n}); //storing backend products/:id property in cartItems state\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.stringify(localStorage.getItem(\"cartItems\")) //removed JSON.parse\n: []; //Putting the cartItems in a global state\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconsole.log(initialState.cart);\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducers","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","stringify","initialState","cartItems","console","log","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,kBADD,EAECC,qBAFD,QAGO,2BAHP;AAIA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC/BQ,EAAAA,WAAW,EAAEJ,kBADkB;AAE/BK,EAAAA,cAAc,EAAEJ,qBAFe;AAG/BK,EAAAA,IAAI,EAAEJ;AAHyB,CAAD,CAA/B,C,CAMA;;AACA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,SAAL,CAAeH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf,CAD0B,CACwB;AADxB,EAE1B,EAFH,C,CAIA;;AACA,MAAMG,YAAY,GAAG;AACpBN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADc,CAArB;AAGAO,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACN,IAAzB;AACA,MAAMU,UAAU,GAAG,CAAClB,KAAD,CAAnB;AACA,MAAMmB,KAAK,GAAGtB,WAAW,CACxBQ,OADwB,EAExBS,YAFwB,EAGxBb,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAJ,CAAhB,CAHK,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n} from \"./actions/productReducers\";\r\nimport { cartReducers } from \"./actions/cartReducers\";\r\n\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tcart: cartReducers,\r\n});\r\n\r\n//storing backend products/:id property in cartItems state\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n\t? JSON.stringify(localStorage.getItem(\"cartItems\")) //removed JSON.parse\r\n\t: [];\r\n\r\n//Putting the cartItems in a global state\r\nconst initialState = {\r\n\tcart: { cartItems: cartItemsFromStorage },\r\n};\r\nconsole.log(initialState.cart);\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}