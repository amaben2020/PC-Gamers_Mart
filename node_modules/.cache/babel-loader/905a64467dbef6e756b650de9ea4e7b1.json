{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"././../constants/cartConstants\";\nconst cartItemsState = {\n  cartItems: []\n};\nexport const cartReducers = (state = cartItemsState, action = {}) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      //product is data._id in cartActions.js from b.end\n      const item = action.payload; //existItems simply means get the item that matches the product id (payload)\n\n      const existItem = state.cartItems.find(x => x.product === item.product); //i.e x._id === action.payload._id\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/actions/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartItemsState","cartItems","cartReducers","state","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SACCA,aADD,EAECC,gBAFD,QAGO,gCAHP;AAIA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,SAAS,EAAE;AADW,CAAvB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,cAAT,EAAyBI,MAAM,GAAG,EAAlC,KAAyC;AACpE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,aAAL;AACC;AACA,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB,CAFD,CAGC;;AACA,YAAMC,SAAS,GAAGL,KAAK,CAACF,SAAN,CAAgBQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB,CAJD,CAI4E;;AAE3E,UAAIH,SAAJ,EAAe;AACd,eAAO,EACN,GAAGL,KADG;AAENF,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,GAAhB,CAAqBF,CAAD,IAC9BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD/B;AAFL,SAAP;AAMA,OAPD,MAOO;AACN,eAAO,EACN,GAAGP,KADG;AAENF,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBK,IAArB;AAFL,SAAP;AAIA;;AAEF,SAAKP,gBAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBY,MAAhB,CACTP,IAAD,IAAUA,IAAI,CAACK,OAAL,KAAiBP,MAAM,CAACG,OADxB;AAFL,OAAP;;AAOD;AACC,aAAOJ,KAAP;AA9BF;AAgCA,CAjCM","sourcesContent":["import {\r\n\tCART_ADD_ITEM,\r\n\tCART_REMOVE_ITEM,\r\n} from \"././../constants/cartConstants\";\r\nconst cartItemsState = {\r\n\tcartItems: [],\r\n};\r\nexport const cartReducers = (state = cartItemsState, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CART_ADD_ITEM:\r\n\t\t\t//product is data._id in cartActions.js from b.end\r\n\t\t\tconst item = action.payload;\r\n\t\t\t//existItems simply means get the item that matches the product id (payload)\r\n\t\t\tconst existItem = state.cartItems.find((x) => x.product === item.product); //i.e x._id === action.payload._id\r\n\r\n\t\t\tif (existItem) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: state.cartItems.map((x) =>\r\n\t\t\t\t\t\tx.product === existItem.product ? item : x\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: [...state.cartItems, item],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\tcase CART_REMOVE_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItems: state.cartItems.filter(\r\n\t\t\t\t\t(item) => item.product !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}