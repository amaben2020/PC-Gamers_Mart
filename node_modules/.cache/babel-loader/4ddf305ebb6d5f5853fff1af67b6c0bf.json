{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\UserEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Loading from \"./../../messages/Loading\";\nimport FormContainer from \"./FormContainer/FormContainer.js\";\nimport { register } from \"./../../actions/userActions\";\nimport { getUserDetails } from \"./../../actions/userActions\";\nimport { Row } from \"react-bootstrap\"; // getUserDetails:  createdAt,email,isAdmin: false,name: \"Jane Doe\",updatedAt,_id excluding token cos we used .select('-password) in the backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = ({\n  location,\n  history,\n  match\n}) => {\n  _s();\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch(); //getting the user id so it mimicks postman i.e PUT http://localhost:9000/api/users/6060767188f29d2030440c22\n\n  const userId = match.params.id; //Redirect moves you to the homepage '/' when you successfully login\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  console.log(redirect);\n  console.log(location);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  console.log(user);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  }; //userInfo is the token, if the token is available, redirect to homepage\n\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: [\" \", \"Go Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"py-2\",\n              children: \"Is Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              checked: isAdmin,\n              onChange: e => setIsAdmin(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"xEY7KrWOOu0YlCt8exN7ZMTvlVI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/UserEditScreen.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","ErrorMessage","Link","Form","Button","Loading","FormContainer","register","getUserDetails","Row","UserEditScreen","location","history","match","isAdmin","setIsAdmin","email","setEmail","name","setName","message","setMessage","dispatch","userId","params","id","redirect","search","split","console","log","userDetails","state","loading","error","user","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loading from \"./../../messages/Loading\";\r\nimport FormContainer from \"./FormContainer/FormContainer.js\";\r\nimport { register } from \"./../../actions/userActions\";\r\nimport { getUserDetails } from \"./../../actions/userActions\";\r\nimport { Row } from \"react-bootstrap\";\r\n// getUserDetails:  createdAt,email,isAdmin: false,name: \"Jane Doe\",updatedAt,_id excluding token cos we used .select('-password) in the backend\r\n\r\nconst UserEditScreen = ({ location, history, match }) => {\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [message, setMessage] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\t//getting the user id so it mimicks postman i.e PUT http://localhost:9000/api/users/6060767188f29d2030440c22\r\n\tconst userId = match.params.id;\r\n\r\n\t//Redirect moves you to the homepage '/' when you successfully login\r\n\tconst redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\tconsole.log(redirect);\r\n\tconsole.log(location);\r\n\r\n\tconst userDetails = useSelector((state) => state.userDetails);\r\n\tconst { loading, error, user } = userDetails;\r\n\tconsole.log(user);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\t//userInfo is the token, if the token is available, redirect to homepage\r\n\tuseEffect(() => {}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n\t\t\t\t{\" \"}\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<h1> Edit User</h1>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t) : error ? (\r\n\t\t\t\t\t<ErrorMessage variant=\"danger\"> {error}</ErrorMessage>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"isadmin\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"py-2\">Is Admin</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tchecked={isAdmin}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setIsAdmin(e.target.checked)}\r\n\t\t\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\t\tSIGN UP\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}