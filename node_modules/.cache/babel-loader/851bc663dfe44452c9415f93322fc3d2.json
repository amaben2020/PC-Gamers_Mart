{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"./../constants/orderConstants\";\nimport axios from \"axios\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST\n  });\n\n  try {\n    //getting the userInfo i.e Token from state so you could access the user's profile\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token} `\n      }\n    }; //the order {} object field must have same info with backend\n\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error\n    });\n  } //where you store the token, username etc\n\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error"],"mappings":"AAAA,SACCA,iBADD,EAECC,oBAFD,EAGCC,oBAHD,QAIO,+BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;;AACA,MAAI;AACH;AACA,UAAM;AACLQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADhC;AADK,KAAf,CANG,CAWH;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAY,aAAZ,EAA0BX,KAA1B,EAAiCM,MAAjC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,oBAAR;AAA8Be,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACA,GAfD,CAeE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,iBAAR;AAA2BiB,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACA,GAnBkE,CAoBnE;;AACA,CArBM","sourcesContent":["import {\r\n\tORDER_CREATE_FAIL,\r\n\tORDER_CREATE_REQUEST,\r\n\tORDER_CREATE_SUCCESS,\r\n} from \"./../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\tdispatch({ type: ORDER_CREATE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t//the order {} object field must have same info with backend\r\n\t\tconst { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n\t\tdispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: ORDER_CREATE_FAIL, payload: error });\r\n\t}\r\n\t//where you store the token, username etc\r\n};\r\n"]},"metadata":{},"sourceType":"module"}