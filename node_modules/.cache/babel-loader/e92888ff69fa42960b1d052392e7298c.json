{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Proshop Ecommerce\\\\frontend\\\\frontend\\\\src\\\\components\\\\screen\\\\ProfileScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport Loading from \"./../../messages/Loading\";\nimport { listMyOrders } from \"./../../actions/orderActions.js\";\nimport { getUserDetails, updateUserProfile } from \"./../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails); //user is the state of our userDetailsReducer\n\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    orders,\n    loading: loadingOrders,\n    error: errorOrders\n  } = orderListMy;\n  console.log(\"ORDERS SCREEN DATA:\", orders);\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch]); //This is the state from the store reducer\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile; //getting the usreInfo from the userLogin state\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, dispatch, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  }; //userInfo is the token, if the token is available, redirect to homepage\n\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [\" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), success && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: \"Profile Successfully updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: errorOrders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TOTAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DELIVERED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {}, order.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginScreen, \"N2xoL0VfA+10zInER74f0NwU5k8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/components/screen/ProfileScreen.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","ErrorMessage","Form","Button","Row","Col","Table","Loading","listMyOrders","getUserDetails","updateUserProfile","LoginScreen","location","history","password","setPassword","email","setEmail","name","setName","message","setMessage","confirmPassword","setConfirmPassword","dispatch","userDetails","state","loading","error","user","orderListMy","orders","loadingOrders","errorOrders","console","log","userUpdateProfile","success","userLogin","userInfo","push","submitHandler","e","preventDefault","id","_id","target","value","map","order"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"./../../messages/ErrorMessage\";\r\n\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport Loading from \"./../../messages/Loading\";\r\nimport { listMyOrders } from \"./../../actions/orderActions.js\";\r\nimport { getUserDetails, updateUserProfile } from \"./../../actions/userActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [message, setMessage] = useState(null);\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\tconst userDetails = useSelector((state) => state.userDetails);\r\n\t//user is the state of our userDetailsReducer\r\n\tconst { loading, error, user } = userDetails;\r\n\r\n\tconst orderListMy = useSelector((state) => state.orderListMy);\r\n\tconst { orders, loading: loadingOrders, error: errorOrders } = orderListMy;\r\n\tconsole.log(\"ORDERS SCREEN DATA:\", orders);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(listMyOrders());\r\n\t}, [dispatch]);\r\n\r\n\t//This is the state from the store reducer\r\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n\tconst { success } = userUpdateProfile;\r\n\t//getting the usreInfo from the userLogin state\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t\tif (!user.name) {\r\n\t\t\t\tdispatch(getUserDetails(\"profile\"));\r\n\t\t\t} else {\r\n\t\t\t\tsetName(user.name);\r\n\t\t\t\tsetEmail(user.email);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [history, userInfo, dispatch, user]);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage(\"Passwords do not match\");\r\n\t\t} else {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateUserProfile({\r\n\t\t\t\t\tid: user._id,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t//userInfo is the token, if the token is available, redirect to homepage\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2> User Profile</h2>\r\n\t\t\t\t{message && <ErrorMessage> {message}</ErrorMessage>}\r\n\t\t\t\t{error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n\t\t\t\t{success && <ErrorMessage>Profile Successfully updated</ErrorMessage>}\r\n\t\t\t\t{loading && <Loading />}\r\n\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"confirmPassword\">\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\tUPDATE\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>{\" \"}\r\n\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t<Col md={9}>\r\n\t\t\t\t\t<h2>My Orders</h2>\r\n\t\t\t\t\t{loadingOrders ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : errorOrders ? (\r\n\t\t\t\t\t\t<ErrorMessage variant=\"danger\">{errorOrders}</ErrorMessage>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>DATE</th>\r\n\t\t\t\t\t\t\t\t\t<th>TOTAL</th>\r\n\t\t\t\t\t\t\t\t\t<th>PAID</th>\r\n\t\t\t\t\t\t\t\t\t<th>DELIVERED</th>\r\n\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{orders.map((order) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={order.id}></tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}