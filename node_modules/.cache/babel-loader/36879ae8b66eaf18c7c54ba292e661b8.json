{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST } from \"./../constants/constants\";\nimport axios from \"axios\";\nexport const productListAction = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    //Dispatching error, if there is a custom error, fire that one, else use generic error\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.data.message : error.message\n    });\n  }\n};\nexport const productDetailsAction = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    //Dispatching error, if there is a custom error, fire that one, else use generic error\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.data.message : error.message\n    });\n  }\n};\nexport const productDeleteAction = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST\n  });\n\n  try {\n    //getting the userInfo i.e Token from state so you could access the user's profile\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token} `\n      }\n    }; // user._id is from the database, user is the object we wanna send to database for updating\n\n    await axios.delete(`/api/products/${productId}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    }); //dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error\n    });\n  }\n};\nexport const productCreateAction = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n\n  try {\n    //getting the userInfo i.e Token from state so you could access the user's profile\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token} `\n      }\n    }; // user._id is from the database, user is the object we wanna send to database for updating\n\n    await axios.post(`/api/products`, product, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    }); //dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/actions/productListActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","axios","productListAction","dispatch","type","data","get","payload","error","response","message","productDetailsAction","id","productDeleteAction","productId","getState","userLogin","userInfo","config","headers","Authorization","token","delete","productCreateAction","product","post"],"mappings":"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","sourcesContent":["import {\r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL,\r\n\tPRODUCT_CREATE_REQUEST,\r\n} from \"./../constants/constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const productListAction = () => async (dispatch) => {\r\n\tdispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n\ttry {\r\n\t\tconst { data } = await axios.get(\"/api/products\");\r\n\r\n\t\tdispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\t//Dispatching error, if there is a custom error, fire that one, else use generic error\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const productDetailsAction = (id) => async (dispatch) => {\r\n\tdispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`/api/products/${id}`);\r\n\r\n\t\tdispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\t//Dispatching error, if there is a custom error, fire that one, else use generic error\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const productDeleteAction = (productId) => async (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tdispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t// user._id is from the database, user is the object we wanna send to database for updating\r\n\t\tawait axios.delete(`/api/products/${productId}`, config);\r\n\t\tdispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n\t\t//dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: PRODUCT_DELETE_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\nexport const productCreateAction = (product) => async (dispatch, getState) => {\r\n\tdispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t// user._id is from the database, user is the object we wanna send to database for updating\r\n\t\tawait axios.post(`/api/products`, product, config);\r\n\t\tdispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n\t\t//dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: PRODUCT_DELETE_FAIL, payload: error });\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}