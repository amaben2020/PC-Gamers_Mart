{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT,USER_REGISTER_FAIL,USER_REGISTER_SUCCESS,USER_REGISTER_REQUEST,USER_DETAILS_FAIL,USER_DETAILS_SUCCESS,USER_DETAILS_REQUEST,USER_UPDATE_PROFILE_REQUEST,USER_UPDATE_PROFILE_SUCCESS,USER_UPDATE_PROFILE_FAIL,USER_DETAILS_RESET,USER_LIST_REQUEST,USER_LIST_SUCCESS,USER_LIST_FAIL,USER_LIST_RESET,USER_DELETE_REQUEST,USER_DELETE_SUCCESS,USER_DELETE_FAIL,USER_UPDATE_REQUEST,USER_UPDATE_SUCCESS,USER_UPDATE_FAIL,USER_ADMIN_REQUEST,USER_ADMIN_SUCCESS,USER_ADMIN_FAIL}from\"./../constants/userConstants\";import axios from\"axios\";import{ORDER_LIST_MY_RESET}from\"../constants/orderConstants\";import{CART_ITEM_RESET}from\"./../constants/cartConstants\";export var login=function login(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:USER_LOGIN_REQUEST});_context.prev=1;config={headers:{\"Content-Type\":\" application/json\"}};_context.next=5;return axios.post(\"/api/users/login\",{email:email,password:password,config:config});case 5:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem(\"userInfo\",JSON.stringify(data));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);dispatch({type:USER_LOGIN_FAIL,payload:_context.t0});case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,_yield$axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:USER_REGISTER_REQUEST});_context2.prev=1;config={headers:{\"Content-Type\":\" application/json\"}};_context2.next=5;return axios.post(\"/api/users\",{name:name,email:email,password:password,config:config});case 5:_yield$axios$post2=_context2.sent;data=_yield$axios$post2.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});console.log(data);localStorage.setItem(\"userInfo\",JSON.stringify(data));_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);dispatch({type:USER_REGISTER_FAIL,payload:_context2.t0});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,12]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//we need to getState cos we need the userInfo (token)\n//The id below is just a parameter where we would fill in profile route, this makes us navigate to that route\nexport var getUserDetails=function getUserDetails(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState,userInfo,config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:USER_DETAILS_REQUEST});// const userInfo = getState().userLogin.userInfo;\n//getting the userInfo i.e Token from state so you could access the user's profile\n_getState=getState(),userInfo=_getState.userLogin.userInfo;//console.log(userInfo); GETs the entire user details in Database createdAt: \"2021-03-16T10:11:06.029Z\"\n//email: \"jane@example.com\";\n//isAdmin: false;\n//name: \"Jane Doe\";\n//password: \"$2a$10$FQVJOoWGREin5tE3XRvRguXGURg0Zi5nVaxI6BNVpGBUouuMeTOJG\";\n//updatedAt: \"2021-03-16T10:11:06.029Z\";\n//__v: 0;\n//_id: \"6050843a7d68cf4404a0323e\";\nconfig={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};//isnt this ${id} meant to be profile???\n_context3.next=6;return axios.get(\"/api/users/\".concat(id),config);case 6:_yield$axios$get=_context3.sent;data=_yield$axios$get.data;dispatch({type:USER_DETAILS_SUCCESS,payload:data});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);dispatch({type:USER_DETAILS_FAIL,payload:_context3.t0});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();};export var updateUserProfile=function updateUserProfile(user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState2,userInfo,config,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:USER_UPDATE_PROFILE_REQUEST});_context4.prev=1;//getting the userInfo i.e Token from state so you could access the user's profile\n_getState2=getState(),userInfo=_getState2.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token,\" \")}};_context4.next=6;return axios.put(\"/api/users/profile\",user,config);case 6:_yield$axios$put=_context4.sent;data=_yield$axios$put.data;dispatch({type:USER_UPDATE_PROFILE_SUCCESS,payload:data});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](1);dispatch({type:USER_UPDATE_PROFILE_FAIL,payload:_context4.t0});case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[1,11]]);}));return function(_x5,_x6){return _ref4.apply(this,arguments);};}();};//Listing all users for the admin\nexport var listUsers=function listUsers(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var _getState3,userInfo,config,_yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch({type:USER_LIST_REQUEST});_context5.prev=1;//getting the userInfo i.e Token from state so you could access the user's profile\n_getState3=getState(),userInfo=_getState3.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token,\" \")}};_context5.next=6;return axios.get(\"/api/users\",config);case 6:_yield$axios$get2=_context5.sent;data=_yield$axios$get2.data;//\tconsole.log(data); The type of data we receive\n//createdAt: \"2021-03-16T10:11:06.029Z\"\n//email: \"jane@example.com\"\n//isAdmin: false\n//name: \"Jane Doe\"\n//password: \"$2a$10$FQVJOoWGREin5tE3XRvRguXGURg0Zi5nVaxI6BNVpGBUouuMeTOJG\"\n//updatedAt: \"2021-03-16T10:11:06.029Z\"\n//__v: 0\n//_id: \"6050843a7d68cf4404a0323e\"\ndispatch({type:USER_LIST_SUCCESS,payload:data});_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](1);dispatch({type:USER_LIST_FAIL,payload:_context5.t0});case 14:case\"end\":return _context5.stop();}}},_callee5,null,[[1,11]]);}));return function(_x7,_x8){return _ref5.apply(this,arguments);};}();};export var deleteUser=function deleteUser(id){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var _getState4,userInfo,config;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch({type:USER_DELETE_REQUEST});_context6.prev=1;//getting the userInfo i.e Token from state so you could access the user's profile\n_getState4=getState(),userInfo=_getState4.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token,\" \")}};//no need for data, we just want a successful deletion\n_context6.next=6;return axios.delete(\"/api/users/\".concat(id),config);case 6:dispatch({type:USER_DELETE_SUCCESS});_context6.next=12;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](1);dispatch({type:USER_DELETE_FAIL,payload:_context6.t0});case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[1,9]]);}));return function(_x9,_x10){return _ref6.apply(this,arguments);};}();};export var updateUser=function updateUser(user){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){var _getState5,userInfo,config,_yield$axios$put2,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch({type:USER_UPDATE_REQUEST});_context7.prev=1;//getting the userInfo i.e Token from state so you could access the user's profile\n_getState5=getState(),userInfo=_getState5.userLogin.userInfo;config={headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token,\" \")}};// user._id is from the database, user is the object we wanna send to database for updating\n_context7.next=6;return axios.put(\"/api/users/\".concat(user._id),user,config);case 6:_yield$axios$put2=_context7.sent;data=_yield$axios$put2.data;dispatch({type:USER_UPDATE_SUCCESS});//WE ALSO WANNA UPDATE THE USER'S DETAIL WITH THIS INFO\ndispatch({type:USER_DETAILS_SUCCESS,payload:data});_context7.next=15;break;case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](1);dispatch({type:USER_UPDATE_FAIL,payload:_context7.t0});case 15:case\"end\":return _context7.stop();}}},_callee7,null,[[1,12]]);}));return function(_x11,_x12){return _ref7.apply(this,arguments);};}();};//\nexport var getUserForAdmin=function getUserForAdmin(id){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch,getState){var _getState6,userInfo,config,_yield$axios$get3,data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:dispatch({type:USER_ADMIN_REQUEST});_context8.prev=1;//getting the userInfo i.e Token from state so you could access the user's profile\n_getState6=getState(),userInfo=_getState6.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token,\" \")}};// user._id is from the database, user is the object we wanna send to database for updating\n_context8.next=6;return axios.get(\"/api/users/profile/\".concat(id),config);case 6:_yield$axios$get3=_context8.sent;data=_yield$axios$get3.data;dispatch({type:USER_ADMIN_SUCCESS,payload:data});//dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n_context8.next=14;break;case 11:_context8.prev=11;_context8.t0=_context8[\"catch\"](1);dispatch({type:USER_ADMIN_FAIL,payload:_context8.t0});case 14:case\"end\":return _context8.stop();}}},_callee8,null,[[1,11]]);}));return function(_x13,_x14){return _ref8.apply(this,arguments);};}();};export var logout=function logout(){return function(dispatch){dispatch({type:USER_LOGOUT});dispatch({type:USER_DETAILS_RESET});dispatch({type:ORDER_LIST_MY_RESET});dispatch({type:CART_ITEM_RESET});dispatch({type:USER_LIST_RESET});localStorage.removeItem(\"userInfo\");localStorage.removeItem(\"cartItems\");};};","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_ADMIN_REQUEST","USER_ADMIN_SUCCESS","USER_ADMIN_FAIL","axios","ORDER_LIST_MY_RESET","CART_ITEM_RESET","login","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","register","name","console","log","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id","getUserForAdmin","logout","removeItem"],"mappings":"6VAAA,OACCA,kBADD,CAECC,kBAFD,CAGCC,eAHD,CAICC,WAJD,CAKCC,kBALD,CAMCC,qBAND,CAOCC,qBAPD,CAQCC,iBARD,CASCC,oBATD,CAUCC,oBAVD,CAWCC,2BAXD,CAYCC,2BAZD,CAaCC,wBAbD,CAcCC,kBAdD,CAeCC,iBAfD,CAgBCC,iBAhBD,CAiBCC,cAjBD,CAkBCC,eAlBD,CAmBCC,mBAnBD,CAoBCC,mBApBD,CAqBCC,gBArBD,CAsBCC,mBAtBD,CAuBCC,mBAvBD,CAwBCC,gBAxBD,CAyBCC,kBAzBD,CA0BCC,kBA1BD,CA2BCC,eA3BD,KA4BO,8BA5BP,CA6BA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,mBAAT,KAAoC,6BAApC,CACA,OAASC,eAAT,KAAgC,8BAAhC,CACA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAQC,QAAR,iGAAqB,iBAAOC,QAAP,oJACzCA,QAAQ,CAAC,CAAEC,IAAI,CAAElC,kBAAR,CAAD,CAAR,CADyC,gBAGlCmC,MAHkC,CAGzB,CACdC,OAAO,CAAE,CACR,eAAgB,mBADR,CADK,CAHyB,uBAQjBT,CAAAA,KAAK,CAACU,IAAN,CAAW,kBAAX,CAA+B,CACrDN,KAAK,CAALA,KADqD,CAErDC,QAAQ,CAARA,QAFqD,CAGrDG,MAAM,CAANA,MAHqD,CAA/B,CARiB,wCAQhCG,IARgC,mBAQhCA,IARgC,CAcxCL,QAAQ,CAAC,CAAEC,IAAI,CAAEjC,kBAAR,CAA4BsC,OAAO,CAAED,IAArC,CAAD,CAAR,CAEAE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC,EAhBwC,iFAkBxCL,QAAQ,CAAC,CAAEC,IAAI,CAAEhC,eAAR,CAAyBqC,OAAO,YAAhC,CAAD,CAAR,CAlBwC,qEAArB,gEAAd,CAuBP,MAAO,IAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAOd,KAAP,CAAcC,QAAd,kGAA2B,kBAAOC,QAAP,yJAClDA,QAAQ,CAAC,CAAEC,IAAI,CAAE5B,qBAAR,CAAD,CAAR,CADkD,iBAG3C6B,MAH2C,CAGlC,CACdC,OAAO,CAAE,CACR,eAAgB,mBADR,CADK,CAHkC,wBAQ1BT,CAAAA,KAAK,CAACU,IAAN,CAAW,YAAX,CAAyB,CAC/CQ,IAAI,CAAJA,IAD+C,CAE/Cd,KAAK,CAALA,KAF+C,CAG/CC,QAAQ,CAARA,QAH+C,CAI/CG,MAAM,CAANA,MAJ+C,CAAzB,CAR0B,0CAQzCG,IARyC,oBAQzCA,IARyC,CAejDL,QAAQ,CAAC,CAAEC,IAAI,CAAE7B,qBAAR,CAA+BkC,OAAO,CAAED,IAAxC,CAAD,CAAR,CACAQ,OAAO,CAACC,GAAR,CAAYT,IAAZ,EACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC,EAjBiD,qFAmBjDL,QAAQ,CAAC,CAAEC,IAAI,CAAE9B,kBAAR,CAA4BmC,OAAO,aAAnC,CAAD,CAAR,CAnBiD,uEAA3B,kEAAjB,CAwBP;AACA;AAEA,MAAO,IAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,kGAAQ,kBAAOhB,QAAP,CAAiBiB,QAAjB,2LAEpCjB,QAAQ,CAAC,CAAEC,IAAI,CAAEzB,oBAAR,CAAD,CAAR,CACA;AACA;AAJoC,UAOhCyC,QAAQ,EAPwB,CAMtBC,QANsB,WAMnCC,SANmC,CAMtBD,QANsB,CAQpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEMhB,MAjB8B,CAiBrB,CACdC,OAAO,CAAE,CACRiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,CADL,CADK,CAjBqB,CAsBpC;AAtBoC,uBAuBb3B,CAAAA,KAAK,CAAC4B,GAAN,sBAAwBN,EAAxB,EAA8Bd,MAA9B,CAvBa,wCAuB5BG,IAvB4B,kBAuB5BA,IAvB4B,CAyBpCL,QAAQ,CAAC,CAAEC,IAAI,CAAE1B,oBAAR,CAA8B+B,OAAO,CAAED,IAAvC,CAAD,CAAR,CAzBoC,qFA2BpCL,QAAQ,CAAC,CAAEC,IAAI,CAAE3B,iBAAR,CAA2BgC,OAAO,aAAlC,CAAD,CAAR,CA3BoC,uEAAR,sEAAvB,CA+BP,MAAO,IAAMiB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,kGAAU,kBAAOxB,QAAP,CAAiBiB,QAAjB,2KAC1CjB,QAAQ,CAAC,CAAEC,IAAI,CAAExB,2BAAR,CAAD,CAAR,CAD0C,iBAGzC;AAHyC,WAMrCwC,QAAQ,EAN6B,CAK3BC,QAL2B,YAKxCC,SALwC,CAK3BD,QAL2B,CAQnChB,MARmC,CAQ1B,CACdC,OAAO,CAAE,CACRiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,KADL,CADK,CAR0B,wBAalB3B,CAAAA,KAAK,CAAC+B,GAAN,sBAAgCD,IAAhC,CAAsCtB,MAAtC,CAbkB,wCAajCG,IAbiC,kBAajCA,IAbiC,CAezCL,QAAQ,CAAC,CAAEC,IAAI,CAAEvB,2BAAR,CAAqC4B,OAAO,CAAED,IAA9C,CAAD,CAAR,CAfyC,qFAiBzCL,QAAQ,CAAC,CAAEC,IAAI,CAAEtB,wBAAR,CAAkC2B,OAAO,aAAzC,CAAD,CAAR,CAjByC,uEAAV,sEAA1B,CAsBP;AACA,MAAO,IAAMoB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,mGAAM,kBAAO1B,QAAP,CAAiBiB,QAAjB,4KAC9BjB,QAAQ,CAAC,CAAEC,IAAI,CAAEpB,iBAAR,CAAD,CAAR,CAD8B,iBAG7B;AAH6B,WAMzBoC,QAAQ,EANiB,CAKfC,QALe,YAK5BC,SAL4B,CAKfD,QALe,CAQvBhB,MARuB,CAQd,CACdC,OAAO,CAAE,CACRiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,KADL,CADK,CARc,wBAaN3B,CAAAA,KAAK,CAAC4B,GAAN,CAAU,YAAV,CAAwBpB,MAAxB,CAbM,yCAarBG,IAbqB,mBAarBA,IAbqB,CAc7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,QAAQ,CAAC,CAAEC,IAAI,CAAEnB,iBAAR,CAA2BwB,OAAO,CAAED,IAApC,CAAD,CAAR,CAvB6B,qFAyB7BL,QAAQ,CAAC,CAAEC,IAAI,CAAElB,cAAR,CAAwBuB,OAAO,aAA/B,CAAD,CAAR,CAzB6B,uEAAN,sEAAlB,CA6BP,MAAO,IAAMqB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACX,EAAD,kGAAQ,kBAAOhB,QAAP,CAAiBiB,QAAjB,qJACjCjB,QAAQ,CAAC,CAAEC,IAAI,CAAEhB,mBAAR,CAAD,CAAR,CADiC,iBAGhC;AAHgC,WAM5BgC,QAAQ,EANoB,CAKlBC,QALkB,YAK/BC,SAL+B,CAKlBD,QALkB,CAQ1BhB,MAR0B,CAQjB,CACdC,OAAO,CAAE,CACRiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,KADL,CADK,CARiB,CAahC;AAbgC,uBAc1B3B,CAAAA,KAAK,CAACkC,MAAN,sBAA2BZ,EAA3B,EAAiCd,MAAjC,CAd0B,QAgBhCF,QAAQ,CAAC,CAAEC,IAAI,CAAEf,mBAAR,CAAD,CAAR,CAhBgC,mFAkBhCc,QAAQ,CAAC,CAAEC,IAAI,CAAEd,gBAAR,CAA0BmB,OAAO,aAAjC,CAAD,CAAR,CAlBgC,sEAAR,uEAAnB,CAsBP,MAAO,IAAMuB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,IAAD,kGAAU,kBAAOxB,QAAP,CAAiBiB,QAAjB,4KACnCjB,QAAQ,CAAC,CAAEC,IAAI,CAAEb,mBAAR,CAAD,CAAR,CADmC,iBAGlC;AAHkC,WAM9B6B,QAAQ,EANsB,CAKpBC,QALoB,YAKjCC,SALiC,CAKpBD,QALoB,CAQ5BhB,MAR4B,CAQnB,CACdC,OAAO,CAAE,CACR,eAAgB,kBADR,CAERiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,KAFL,CADK,CARmB,CAclC;AAdkC,uBAeX3B,CAAAA,KAAK,CAAC+B,GAAN,sBAAwBD,IAAI,CAACM,GAA7B,EAAoCN,IAApC,CAA0CtB,MAA1C,CAfW,yCAe1BG,IAf0B,mBAe1BA,IAf0B,CAgBlCL,QAAQ,CAAC,CAAEC,IAAI,CAAEZ,mBAAR,CAAD,CAAR,CACA;AACAW,QAAQ,CAAC,CAAEC,IAAI,CAAE1B,oBAAR,CAA8B+B,OAAO,CAAED,IAAvC,CAAD,CAAR,CAlBkC,qFAoBlCL,QAAQ,CAAC,CAAEC,IAAI,CAAEX,gBAAR,CAA0BgB,OAAO,aAAjC,CAAD,CAAR,CApBkC,uEAAV,wEAAnB,CAwBP;AACA,MAAO,IAAMyB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACf,EAAD,kGAAQ,kBAAOhB,QAAP,CAAiBiB,QAAjB,4KACtCjB,QAAQ,CAAC,CAAEC,IAAI,CAAEV,kBAAR,CAAD,CAAR,CADsC,iBAGrC;AAHqC,WAMjC0B,QAAQ,EANyB,CAKvBC,QALuB,YAKpCC,SALoC,CAKvBD,QALuB,CAQ/BhB,MAR+B,CAQtB,CACdC,OAAO,CAAE,CACRiB,aAAa,kBAAYF,QAAQ,CAACG,KAArB,KADL,CADK,CARsB,CAarC;AAbqC,uBAcd3B,CAAAA,KAAK,CAAC4B,GAAN,8BAAgCN,EAAhC,EAAsCd,MAAtC,CAdc,yCAc7BG,IAd6B,mBAc7BA,IAd6B,CAerCL,QAAQ,CAAC,CAAEC,IAAI,CAAET,kBAAR,CAA4Bc,OAAO,CAAED,IAArC,CAAD,CAAR,CACA;AAhBqC,qFAkBrCL,QAAQ,CAAC,CAAEC,IAAI,CAAER,eAAR,CAAyBa,OAAO,aAAhC,CAAD,CAAR,CAlBqC,uEAAR,wEAAxB,CAsBP,MAAO,IAAM0B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,UAAChC,QAAD,CAAc,CACzCA,QAAQ,CAAC,CAAEC,IAAI,CAAE/B,WAAR,CAAD,CAAR,CACA8B,QAAQ,CAAC,CAAEC,IAAI,CAAErB,kBAAR,CAAD,CAAR,CACAoB,QAAQ,CAAC,CAAEC,IAAI,CAAEN,mBAAR,CAAD,CAAR,CACAK,QAAQ,CAAC,CAAEC,IAAI,CAAEL,eAAR,CAAD,CAAR,CACAI,QAAQ,CAAC,CAAEC,IAAI,CAAEjB,eAAR,CAAD,CAAR,CACAuB,YAAY,CAAC0B,UAAb,CAAwB,UAAxB,EACA1B,YAAY,CAAC0B,UAAb,CAAwB,WAAxB,EACA,CARqB,EAAf","sourcesContent":["import {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_ADMIN_REQUEST,\r\n\tUSER_ADMIN_SUCCESS,\r\n\tUSER_ADMIN_FAIL,\r\n} from \"./../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport { CART_ITEM_RESET } from \"./../constants/cartConstants\";\r\nexport const login = (email, password) => async (dispatch) => {\r\n\tdispatch({ type: USER_LOGIN_REQUEST });\r\n\ttry {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \" application/json\",\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst { data } = await axios.post(\"/api/users/login\", {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tconfig,\r\n\t\t});\r\n\r\n\t\tdispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_LOGIN_FAIL, payload: error });\r\n\t}\r\n\t//where you store the token, username etc\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\tdispatch({ type: USER_REGISTER_REQUEST });\r\n\ttry {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \" application/json\",\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst { data } = await axios.post(\"/api/users\", {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tconfig,\r\n\t\t});\r\n\r\n\t\tdispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\t\tconsole.log(data);\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_REGISTER_FAIL, payload: error });\r\n\t}\r\n\t//where you store the token, username etc\r\n};\r\n\r\n//we need to getState cos we need the userInfo (token)\r\n//The id below is just a parameter where we would fill in profile route, this makes us navigate to that route\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DETAILS_REQUEST });\r\n\t\t// const userInfo = getState().userLogin.userInfo;\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\t\t//console.log(userInfo); GETs the entire user details in Database createdAt: \"2021-03-16T10:11:06.029Z\"\r\n\t\t//email: \"jane@example.com\";\r\n\t\t//isAdmin: false;\r\n\t\t//name: \"Jane Doe\";\r\n\t\t//password: \"$2a$10$FQVJOoWGREin5tE3XRvRguXGURg0Zi5nVaxI6BNVpGBUouuMeTOJG\";\r\n\t\t//updatedAt: \"2021-03-16T10:11:06.029Z\";\r\n\t\t//__v: 0;\r\n\t\t//_id: \"6050843a7d68cf4404a0323e\";\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\t//isnt this ${id} meant to be profile???\r\n\t\tconst { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_DETAILS_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\tdispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n\t\tdispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: error });\r\n\t}\r\n\t//where you store the token, username etc\r\n};\r\n\r\n//Listing all users for the admin\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\tdispatch({ type: USER_LIST_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst { data } = await axios.get(\"/api/users\", config);\r\n\t\t//\tconsole.log(data); The type of data we receive\r\n\t\t//createdAt: \"2021-03-16T10:11:06.029Z\"\r\n\t\t//email: \"jane@example.com\"\r\n\t\t//isAdmin: false\r\n\t\t//name: \"Jane Doe\"\r\n\t\t//password: \"$2a$10$FQVJOoWGREin5tE3XRvRguXGURg0Zi5nVaxI6BNVpGBUouuMeTOJG\"\r\n\t\t//updatedAt: \"2021-03-16T10:11:06.029Z\"\r\n\t\t//__v: 0\r\n\t\t//_id: \"6050843a7d68cf4404a0323e\"\r\n\t\tdispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_LIST_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\tdispatch({ type: USER_DELETE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t//no need for data, we just want a successful deletion\r\n\t\tawait axios.delete(`/api/users/${id}`, config);\r\n\r\n\t\tdispatch({ type: USER_DELETE_SUCCESS });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_DELETE_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\tdispatch({ type: USER_UPDATE_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t// user._id is from the database, user is the object we wanna send to database for updating\r\n\t\tconst { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\t\tdispatch({ type: USER_UPDATE_SUCCESS });\r\n\t\t//WE ALSO WANNA UPDATE THE USER'S DETAIL WITH THIS INFO\r\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_UPDATE_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\n//\r\nexport const getUserForAdmin = (id) => async (dispatch, getState) => {\r\n\tdispatch({ type: USER_ADMIN_REQUEST });\r\n\ttry {\r\n\t\t//getting the userInfo i.e Token from state so you could access the user's profile\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token} `,\r\n\t\t\t},\r\n\t\t};\r\n\t\t// user._id is from the database, user is the object we wanna send to database for updating\r\n\t\tconst { data } = await axios.get(`/api/users/profile/${id}`, config);\r\n\t\tdispatch({ type: USER_ADMIN_SUCCESS, payload: data });\r\n\t\t//dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: USER_ADMIN_FAIL, payload: error });\r\n\t}\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tdispatch({ type: USER_LOGOUT });\r\n\tdispatch({ type: USER_DETAILS_RESET });\r\n\tdispatch({ type: ORDER_LIST_MY_RESET });\r\n\tdispatch({ type: CART_ITEM_RESET });\r\n\tdispatch({ type: USER_LIST_RESET });\r\n\tlocalStorage.removeItem(\"userInfo\");\r\n\tlocalStorage.removeItem(\"cartItems\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}