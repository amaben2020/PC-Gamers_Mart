{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from \"./../constants/cartConstants\";\nimport axios from \"axios\";\nexport const addToCart = (qty, id) => async (dispatch, getState) => {\n  //qty is a parameter\n  //fetch the individual product with id\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`); // data are the properties from backend of an individual product\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      countInStock: data.countInStock,\n      price: data.price,\n      category: data.category,\n      qty\n    }\n  }); //you call the getState() function to retrieve cartItems from state\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => (dispatch, getState) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Proshop Ecommerce/frontend/frontend/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","axios","addToCart","qty","id","dispatch","getState","data","get","type","payload","product","_id","name","image","countInStock","price","category","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress"],"mappings":"AAAA,SACCA,aADD,EAECC,gBAFD,EAGCC,0BAHD,QAIO,8BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnE;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBJ,EAAG,EAA9B,CAAvB,CAHmE,CAKnE;;AACAC,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAEX,aADE;AAERY,IAAAA,OAAO,EAAE;AACRC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADN;AAERC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFH;AAGRC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIRC,MAAAA,YAAY,EAAER,IAAI,CAACQ,YAJX;AAKRC,MAAAA,KAAK,EAAET,IAAI,CAACS,KALJ;AAMRC,MAAAA,QAAQ,EAAEV,IAAI,CAACU,QANP;AAORd,MAAAA;AAPQ;AAFD,GAAD,CAAR,CANmE,CAkBnE;;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC;AACA,CApBM;AAsBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7DD,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEV,gBAAR;AAA0BW,IAAAA,OAAO,EAAEN;AAAnC,GAAD,CAAR;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC;AACA,CAHM;AAKP,OAAO,MAAME,mBAAmB,GAAIlB,IAAD,IAAU,CAACF,QAAD,EAAWC,QAAX,KAAwB;AACpED,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAET,0BAAR;AAAoCU,IAAAA,OAAO,EAAEH;AAA7C,GAAD,CAAR;AACAW,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAed,IAAf,CAAxC;AACA,CAHM","sourcesContent":["import {\r\n\tCART_ADD_ITEM,\r\n\tCART_REMOVE_ITEM,\r\n\tCART_SAVE_SHIPPING_ADDRESS,\r\n} from \"./../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (qty, id) => async (dispatch, getState) => {\r\n\t//qty is a parameter\r\n\t//fetch the individual product with id\r\n\tconst { data } = await axios.get(`/api/products/${id}`);\r\n\r\n\t// data are the properties from backend of an individual product\r\n\tdispatch({\r\n\t\ttype: CART_ADD_ITEM,\r\n\t\tpayload: {\r\n\t\t\tproduct: data._id,\r\n\t\t\tname: data.name,\r\n\t\t\timage: data.image,\r\n\t\t\tcountInStock: data.countInStock,\r\n\t\t\tprice: data.price,\r\n\t\t\tcategory: data.category,\r\n\t\t\tqty,\r\n\t\t},\r\n\t});\r\n\t//you call the getState() function to retrieve cartItems from state\r\n\tlocalStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n\tdispatch({ type: CART_REMOVE_ITEM, payload: id });\r\n\tlocalStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch, getState) => {\r\n\tdispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n\tlocalStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}